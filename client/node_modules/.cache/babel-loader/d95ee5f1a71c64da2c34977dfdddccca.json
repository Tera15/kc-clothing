{"ast":null,"code":"var _jsxFileName = \"/Users/ccatherall/Desktop/kc-clothing/client/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { signUpStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    ;\n    signUpStart(displayName, email, password);\n    setUserCredentials({\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-u[-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password) => dispatch(signUpStart({\n    displayName,\n    email,\n    password\n  })),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/ccatherall/Desktop/kc-clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","signUpStart","emailSignInStart","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { connect } from 'react-redux';\n\n\nimport { signUpStart, emailSignInStart } from '../../redux/user/user.actions';\n\nimport './sign-up.styles.scss';\n\nconst SignUp = ({ signUpStart }) => {\n   \n    const [userCredentials, setUserCredentials] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n    const { displayName, email, password, confirmPassword } = userCredentials;\n    const handleSubmit = async event => {\n        event.preventDefault();\n        \n        \n        if(password !== confirmPassword) {\n            alert(\"passwords don't match\");\n            return;\n        };\n            signUpStart(displayName, email, password);\n           \n            setUserCredentials({\n                displayName: '',\n                email: '',\n                password: '',\n                confirmPassword: ''\n        });\n\n       \n    };\n\n    const handleChange = event => {\n        const { name, value } = event.target;\n\n        setUserCredentials({\n            ...userCredentials,\n             [name]: value\n            });\n    };\n\n    \n        \n        return (\n            <div className='sign-up'>\n                <h2 className='title'>I do not have an account</h2>\n                <span>sign up with your email and password</span>\n\n                <form className='sign-u[-form' onSubmit={handleSubmit}>\n                    <FormInput \n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange={handleChange}\n                    label='Display Name'\n                    />\n                     <FormInput \n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange={handleChange}\n                    label='Email'\n                    />\n                     <FormInput \n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={handleChange}\n                    label='Password'\n                    />\n                     <FormInput \n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    label='Confirm Password'\n                    />\n\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n                    \n                </form>\n            </div>\n        );\n    }\n\n\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (displayName, email, password) => dispatch(signUpStart({displayName, email, password})),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\n})\n\nexport default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}