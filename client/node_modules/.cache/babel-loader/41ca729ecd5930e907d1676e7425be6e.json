{"ast":null,"code":"var _jsxFileName = \"/Users/ccatherall/Desktop/projects/kc-clothing/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport signInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    //accessing user data client side\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        //checks if user exists and if so sends snapshot of the userRef\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          });\n          console.log(this.state);\n        });\n      }\n\n      this.setState({\n        currentUser: userAuth\n      }); //sets current user to null on log out\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      component: signInAndSignUpPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user)) //action object that is passed to every reducer\n\n});\n\nexport default connect(null, mapDispatchToProps)(App); //null as first argument in connect because I dont need mapStateToProps in this particular component","map":{"version":3,"sources":["/Users/ccatherall/Desktop/projects/kc-clothing/src/App.js"],"names":["React","Switch","Route","connect","HomePage","ShopPage","Header","signInAndSignUpPage","auth","createUserProfileDocument","setCurrentUser","App","Component","constructor","unsubscribeFromAuth","state","currentUser","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","setState","id","data","console","log","componentWillUnmount","render","mapDispatchToProps","dispatch","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD;AACA,SAASC,cAAT,QAA+B,2BAA/B;;AAGA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAiC;AAC/BC,EAAAA,WAAW,GAAE;AACX;AADW,SAObC,mBAPa,GAOS,IAPT;AAEX,SAAKC,KAAL,GAAY;AACVC,MAAAA,WAAW,EAAE;AADH,KAAZ;AAGD;;AAIDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKH,mBAAL,GAA2BN,IAAI,CAACU,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AACnE,UAAIA,QAAJ,EAAc;AAAE;AACd,cAAMC,OAAO,GAAG,MAAMX,yBAAyB,CAACU,QAAD,CAA/C;AAEAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAC7B,eAAKC,QAAL,CAAc;AACZP,YAAAA,WAAW,EAAE;AACXQ,cAAAA,EAAE,EAAEF,QAAQ,CAACE,EADF;AAEX,iBAAGF,QAAQ,CAACG,IAAT;AAFQ;AADD,WAAd;AAMAC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACD,SARD;AAUD;;AACD,WAAKQ,QAAL,CAAc;AAAEP,QAAAA,WAAW,EAAEG;AAAf,OAAd,EAfmE,CAe1B;AACzC,KAhByB,CAA3B;AAiBD;;AAEDS,EAAAA,oBAAoB,GAAG;AACrB,SAAKd,mBAAL;AACD;;AAEDe,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEzB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,SAAS,EAAEC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,SAAS,EAAEE,mBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAUD;;AA9C8B;;AAiDjC,MAAMuB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCrB,EAAAA,cAAc,EAAEsB,IAAI,IAAID,QAAQ,CAACrB,cAAc,CAACsB,IAAD,CAAf,CADM,CACiB;;AADjB,CAAL,CAAnC;;AAIA,eAAe7B,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkCnB,GAAlC,CAAf,C,CAAuD","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {Switch, Route} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport signInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\n\n\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state= {\n      currentUser: null,\n    }\n  }\n\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    //accessing user data client side\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) { //checks if user exists and if so sends snapshot of the userRef\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot(snapShot => {\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          });\n          console.log(this.state);\n        });\n       \n      }\n      this.setState({ currentUser: userAuth }) //sets current user to null on log out\n     });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render(){\n    return(\n      <div>\n        <Header/>\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route exact path='/shop' component={ShopPage} />\n          <Route exact path='/signin' component={signInAndSignUpPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user)) //action object that is passed to every reducer\n})\n\nexport default connect(null, mapDispatchToProps)(App); //null as first argument in connect because I dont need mapStateToProps in this particular component\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}