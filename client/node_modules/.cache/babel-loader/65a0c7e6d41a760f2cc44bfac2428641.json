{"ast":null,"code":"var _jsxFileName = \"/Users/ccatherall/Desktop/kc-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport './sign-in.styles.scss';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      }); //bracket notation so that name is dynamic to where the function is called eg: email or password \n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(CustomButton, {\n      onClick: signInWithGoogle,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Sign in with google\"))));\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/ccatherall/Desktop/kc-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","FormInput","CustomButton","auth","signInWithGoogle","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","handleChange","value","name","target","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,+BAAvC;AAEA,OAAQ,uBAAR;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQlBC,YARkB,GAQH,MAAMC,KAAN,IAAe;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKC,KAAjC;;AAEA,UAAI;AACA,cAAMX,IAAI,CAACY,0BAAL,CAAgCH,KAAhC,EAAuCC,QAAvC,CAAN;AACA,aAAKG,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SAAd;AACH,OAHD,CAGE,OAAOI,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAGJ,KArBiB;;AAAA,SAsBlBG,YAtBkB,GAsBFV,KAAD,IAAW;AACtB,YAAM;AAACW,QAAAA,KAAD;AAAQC,QAAAA;AAAR,UAAgBZ,KAAK,CAACa,MAA5B;AACA,WAAKP,QAAL,CAAc;AAAC,SAACM,IAAD,GAAQD;AAAT,OAAd,EAFsB,CAEQ;AACjC,KAzBiB;;AAEd,SAAKP,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAoBDW,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFJ,EAGI;AAAM,MAAA,QAAQ,EAAE,KAAKf,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACF,MAAA,IAAI,EAAC,OADH;AAEF,MAAA,IAAI,EAAC,OAFH;AAGF,MAAA,YAAY,EAAE,KAAKW,YAHjB;AAIF,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWF,KAJhB;AAKF,MAAA,KAAK,EAAC,OALJ;AAMF,MAAA,QAAQ,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAUI,oBAAC,SAAD;AACA,MAAA,IAAI,EAAC,UADL;AAEA,MAAA,IAAI,EAAC,UAFL;AAGA,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWD,QAHlB;AAIA,MAAA,YAAY,EAAE,KAAKO,YAJnB;AAKA,MAAA,KAAK,EAAC,UALN;AAMA,MAAA,QAAQ,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAmBA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEhB,gBAAvB;AAAyC,MAAA,cAAc,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,CAnBA,CAHJ,CADJ;AA+BH;;AA3DgC;;AA8DrC,eAAeC,MAAf","sourcesContent":["import React from 'react';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\n\nimport  './sign-in.styles.scss';\n\nclass SignIn extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const { email, password } = this.state\n\n        try {\n            await auth.signInWithEmailAndPassword(email, password);\n            this.setState({ email: '', password: '' });\n        } catch (error) {\n            console.log(error)\n        }\n\n        \n    }\n    handleChange = (event) => {\n        const {value, name} = event.target\n        this.setState({[name]: value})//bracket notation so that name is dynamic to where the function is called eg: email or password \n    }\n    render() {\n        return(\n            <div className=\"sign-in\">\n                <h2>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput \n                  name='email'\n                  type='email'\n                  handleChange={this.handleChange}\n                  value={this.state.email}\n                  label='email'\n                  required\n                    />\n                   \n                    <FormInput \n                    name='password'\n                    type='password'\n                    value={this.state.password}\n                    handleChange={this.handleChange}\n                    label='password'\n                    required\n                    />\n                \n                <div className='buttons'>\n                    <CustomButton type='submit'>Sign In</CustomButton>\n                    <CustomButton onClick={signInWithGoogle} isGoogleSignIn>Sign in with google</CustomButton>\n                    {/*isGoogleSignIn will evaluate to true if no value passed. Help to conditionally render our button*/}\n                </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}