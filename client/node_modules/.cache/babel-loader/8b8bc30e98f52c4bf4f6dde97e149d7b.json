{"ast":null,"code":"var _jsxFileName = \"/Users/ccatherall/Desktop/kc-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route, useParams } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.compnent';\nimport CategoryPage from '../category/category.component'; //match comes from route, it is one of three props passed into component nested in <Route />\n// match location and history passed as props from route.\n// telling route that the route name is going to be a parameter by using `${}`\n//to tell it which item exactly we want to fetch\n// `${match.path}` gives us current path, in this case /shop\n//`${match.path}:/categoryId` allows us to dynamicly pick the right category out of our reducer \n//:/catergoryId comes from the match.path object\n//console.log(match) and inspect the object to see where categoryID comes from to better understand \n\nconst ShopPage = ({\n  match\n}) => {\n  let slug = useParams;\n  console.log(slug);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: `${match.path}:/categoryId`,\n    component: CategoryPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nexport default ShopPage;","map":{"version":3,"sources":["/Users/ccatherall/Desktop/kc-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","useParams","CollectionsOverview","CategoryPage","ShopPage","match","slug","console","log","path"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,kBAAjC;AAEA,OAAOC,mBAAP,MAAgC,qEAAhC;AACA,OAAOC,YAAP,MAAyB,gCAAzB,C,CAGA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC1B,MAAIC,IAAI,GAAGL,SAAX;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAEQ;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAED,KAAK,CAACI,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAEP,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACI,IAAK,cAA3B;AAA0C,IAAA,SAAS,EAAEN,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAFR;AAMO,CATX;;AAaA,eAAeC,QAAf","sourcesContent":["import React from 'react';\n\nimport { Route, useParams } from 'react-router-dom';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.compnent';\nimport CategoryPage from '../category/category.component';\n\n\n//match comes from route, it is one of three props passed into component nested in <Route />\n// match location and history passed as props from route.\n\n// telling route that the route name is going to be a parameter by using `${}`\n//to tell it which item exactly we want to fetch\n\n// `${match.path}` gives us current path, in this case /shop\n\n//`${match.path}:/categoryId` allows us to dynamicly pick the right category out of our reducer \n\n//:/catergoryId comes from the match.path object\n\n//console.log(match) and inspect the object to see where categoryID comes from to better understand \n\nconst ShopPage = ({match}) => {\n    let slug = useParams;\n    console.log(slug)\n    return(\n            \n            <div className='shop-page'>\n            <Route exact path={`${match.path}`} component={CollectionsOverview} />\n            <Route path={`${match.path}:/categoryId`} component={CategoryPage} />\n            </div>\n        );}\n\n\n\nexport default ShopPage;"]},"metadata":{},"sourceType":"module"}