{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signInFailure, signInSuccess } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    // destructuring user off of the userRef object\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n;","map":{"version":3,"sources":["/Users/ccatherall/Desktop/kc-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInFailure","signInSuccess","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AACC;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAArB;AACA,UAAMO,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACQ,aAAa,CAAC;AAACO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAAd,CAAT;AACH,GAND,CAME,OAAMC,KAAN,EAAY;AACV,UAAMjB,GAAG,CAACO,aAAa,CAACU,KAAD,CAAd,CAAT;AACH;AACJ;AAAA;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAX,CAA1B,EAAwD;AAC3D,MAAG;AACC,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMN,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMT,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACLQ,aAAa,CAAC;AAACO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CADR,CAAT;AAGH,GAPD,CAOE,OAAMC,KAAN,EAAY;AACV,UAAMjB,GAAG,CAACO,aAAa,CAACU,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACnC,QAAMxB,UAAU,CAACI,eAAe,CAACqB,oBAAjB,EAAuCf,gBAAvC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUgB,kBAAV,GAA8B;AACjC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAM1B,GAAG,CAAC,CAACC,IAAI,CAACqB,mBAAD,CAAL,EAA4BrB,IAAI,CAACuB,kBAAD,CAAhC,CAAD,CAAT;AACH;AAAA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils'\nimport { signInFailure, signInSuccess } from './user.actions';\n\nexport function* signInWithGoogle(){\n    try{\n        // destructuring user off of the userRef object\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument, user)\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n    } catch(error){\n        yield put(signInFailure(error))\n    }\n};\n\nexport function* signInWithEmail({ payload: {email, password}}){\n    try{\n        const { user } = yield auth.signInWithEmailAndPassword(email, password)\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put (\n            signInSuccess({id: userSnapshot.id, ...userSnapshot.data()})\n        );\n    } catch(error){\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n};\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\n};"]},"metadata":{},"sourceType":"module"}