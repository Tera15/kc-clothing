{"ast":null,"code":"var _jsxFileName = \"/Users/ccatherall/Desktop/kc-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        alert(\"passwords don't match\");\n        return;\n      }\n\n      try {\n        const {\n          user\n        } = await auth.createUserWithEmailAndPassword(email, password);\n        await createUserProfileDocument(user, {\n          displayName\n        }); //clears form inputs\n\n        this.setState({\n          displayName: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-u[-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password) => dispatch(signUpStart(displayName, email, password))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/ccatherall/Desktop/kc-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","FormInput","CustomButton","connect","auth","createUserProfileDocument","signUpStart","SignUp","Component","constructor","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","alert","user","createUserWithEmailAndPassword","setState","error","console","handleChange","name","value","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { connect } from 'react-redux';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nimport { signUpStart } from '../../redux/user/user.actions';\n\nimport './sign-up.styles.scss';\n\nclass SignUp extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            displayName: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const { displayName, email, password, confirmPassword } = this.state;\n\n        if(password !== confirmPassword) {\n            alert(\"passwords don't match\")\n            return;\n        }\n\n        try {\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\n\n           await createUserProfileDocument(user, {displayName})\n\n            //clears form inputs\n           this.setState({\n            displayName: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        });\n\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleChange = event => {\n        const { name, value } = event.target;\n\n        this.setState({[name]: value});\n    }\n\n    render(){\n        const {displayName, email, password, confirmPassword} = this.state\n        return (\n            <div className='sign-up'>\n                <h2 className='title'>I do not have an account</h2>\n                <span>sign up with your email and password</span>\n\n                <form className='sign-u[-form' onSubmit={this.handleSubmit}>\n                    <FormInput \n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange={this.handleChange}\n                    label='Display Name'\n                    />\n                     <FormInput \n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange={this.handleChange}\n                    label='Email'\n                    />\n                     <FormInput \n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={this.handleChange}\n                    label='Password'\n                    />\n                     <FormInput \n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={this.handleChange}\n                    label='Confirm Password'\n                    />\n\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n                    \n                </form>\n            </div>\n        );\n    }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (displayName, email, password) => dispatch(signUpStart(displayName, email, password))\n})\n\nexport default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}